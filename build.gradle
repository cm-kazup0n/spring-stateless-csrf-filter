group 'jp.classmethod'
version '1.0-SNAPSHOT'

def springVersion = "4.2.4.RELEASE"
def springBoot1Version = "1.3.2.RELEASE"
def springBoot2Version = "2.0.2.RELEASE"
def thymeLeaf2Version = "2.1.4.RELEASE"
def thymeLeaf3Version = "3.0.9.RELEASE"
def servletAPIVersion = "3.1.0"

allprojects {

    apply plugin: 'java'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    sourceCompatibility = 1.8


    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    configurations {
        providedCompile
    }

    sourceSets {
        main.compileClasspath += configurations.providedCompile
        test.compileClasspath += configurations.providedCompile
        test.runtimeClasspath += configurations.providedCompile
    }


}

project(':stateless-csrf-filter-core') {
    dependencies {
        compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
        compile group: 'org.springframework', name: 'spring-webmvc', version: "${springVersion}"
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        providedCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: "${servletAPIVersion}"
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBoot1Version}"

    }
}
project(':thymeleaf3') {
    dependencies {
        compile project(':stateless-csrf-filter-core')
        compile group: 'org.thymeleaf', name: 'thymeleaf', version: "${thymeLeaf3Version}"
        compile group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: "${thymeLeaf3Version}"
        providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: "${servletAPIVersion}"

        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBoot1Version}"
    }
}
project(':thymeleaf2') {
    dependencies {
        compile project(':stateless-csrf-filter-core')
        compile group: 'org.thymeleaf', name: 'thymeleaf', version: "${thymeLeaf2Version}"
        compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: "${thymeLeaf2Version}"
        providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: "${servletAPIVersion}"
    }
}
project(':example-thymeleaf3') {
    apply plugin:'application'
    mainClassName = "jp.classmethod.spring_stateless_csrf_filter.example_thymeleaf3.App"

    dependencies {
        compile project(":thymeleaf3")
        compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.3.0'
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBoot2Version}"
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: "${springBoot2Version}"
    }
}
project(':example-thymeleaf2') {
    apply plugin:'application'
    mainClassName = "jp.classmethod.spring_stateless_csrf_filter.example_thymeleaf2.App"

    dependencies {
        compile project(":thymeleaf2")
        compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '1.4.0'
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBoot1Version}"
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: "${springBoot1Version}"
    }
}
